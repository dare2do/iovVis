const axios = require('axios');
const util = require('../../../util/utils');

let option = {
    title : {
        text: '振动监测数据统计',
        x: 'center',
        y:'bottom'
    },
    legend: {
        data:['B1'],
        orient: 'vertical',
        x:'80%',
        y:'10%',
        backgroundColor: '#eee',
        borderColor: 'rgba(178,34,34,0.8)',
        borderWidth: 2
    },
    toolbox: {
        show : false
    },
    calculable : false,
    xAxis : [
        {
            type : 'category',
            boundaryGap : false,
            data : [1,2,3,4,5,6,7,8,9,010,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,1,2,3,4,5,6,7,8,9,010,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,1,2,3,4,5,6,7,8,9,010,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31, 1,2,3,4,5,6,7,8,9,010,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31, 1,2,3,4,5,6,7,8,9,010,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
        }
    ],
    yAxis : [
        {
            type : 'value',
            axisLabel : {
                formatter: '{value} °C'
            }
        }
    ],
    series : [
        {
            name:'B1',
            type:'line',
          	data:[1.4485,1.4033,1.3859,1.3755,1.3458,1.3014,1.4485,1.4033,1.3859,1.3755,1.3458,1.3014,1.2736,1.2436,1.2229,1.2068,1.1900,1.1664,1.1494,1.1263,1.1008,1.0709,1.0685,1.0815,1.0732,1.0528,1.0516,1.0506,1.0446,1.0324,1.0170,0.9918,0.9914,1.0110,0.9886,0.9494,0.9342,0.9249,0.9055,0.8802,0.8679,0.8629,0.8338,0.7629,0.7559,0.7370,0.7144,0.6845,0.6470,0.5876,0.5515,0.5048,0.4633,0.4210,0.3647,0.2972,0.2431,0.1796,0.1315,0.0634,0.0246,0.0423,0.0973,0.1740,0.2271,0.2701,0.3182,0.3675,0.4134,0.4573,0.4905,0.5160,0.5380,0.5781,0.5889,0.5928,1.2736,1.2436,1.2229,1.2068,1.1900,1.1664,1.1494,1.1263,1.1008,1.0709,1.0685,1.0815,1.0732,1.0528,1.0516,1.0506,1.0446,1.0324,1.0170,0.9918,0.9914,1.0110,0.9886,0.9494,0.9342,0.9249,0.9055,0.8802,0.8679,0.8629,0.8338,0.7629,0.7559,0.7370,0.7144,0.6845,0.6470,0.5876,0.5515,0.5048,0.4633,0.4210,0.3647,0.2972,0.2431,0.1796,0.1315,0.0634,0.0246,0.0423,0.0973,0.1740,0.2271,0.2701,0.3182,0.3675,0.4134,0.4573,0.4905,0.5160,0.5380,0.5781,0.5889,0.5928]
        }
    ]
};

var chart_area = {
    name: 'chart_data',
    version: '1.0.0',

    fillData: async function (params, token, res, callback) {
        
        let apiUrl = util.getAPI() + `plugins/telemetry/DEVICE/${params.devid}/values/timeseries?limit=100&agg=NONE&keys=crackWidth&startTs=${params.startTime}&endTs=${params.endTime}`;
        axios.get(apiUrl, { headers: { "X-Authorization": token } })
            .then((resp) => {
                let data = resp.data.crackWidth;
                if (data) {
                    callback(option, params, res);
                }
                else {
                    callback(null, params, res);
                }
            })
            .catch((err) => {
                callback(null, params, res);
            });
    }
}
module.exports = chart_area;
